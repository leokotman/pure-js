"use strict";class GoodsItem {    constructor(title, price) {        this.title = title;        this.price = price;    };    _btnHtml() {        return `<button class="add_to_cart" type="button">Add to Cart</button>`;    };    render() {        return `<div class="goods_item">        <h3>${this.title}</h3>        <p>${this.price}</p>        ${this._btnHtml()}        </div>`;    };    // addToCart(){    //     let myCart = [];    //     let thisBtns = document.querySelectorAll('.add_to_cart');    //     function ClickListener(btn){    //         btn.addEventListener('click', () => {    //             myCart.push(this.title, this.price);    //             document.querySelector('.items_count').insertAdjacentHTML("afterend", myCart);    //         });    //     }    //     thisBtns.forEach(ClickListener(this));    // };}class GoodsList {    constructor() {        this.goods = [];        this.filteredGoods = [];    };    _calculateSum() {        let productsSum = 0;        this.goods.forEach((item) => {            productsSum += item.price;        });        return productsSum;    }    _showSum() {        let sumPlace = `<div class='sum'></div>`;        document            .querySelector(".main")            .insertAdjacentHTML("afterbegin", sumPlace);        document            .querySelector(".sum")            .insertAdjacentHTML(                "afterbegin",                `<h2 class="sumH2">Сумма товаров:</h2><span>${this._calculateSum()}</span>`            );    };    fetchGoods() {        this.goods = [            {title: "Shirt",price: 150},            {title: "Socks",price: 50},            {title: "Jacket",price: 350},            {title: "Shoes",price: 250},            {title: "Pyjamas",price: 100},            {title: "Hat",price: 100},            {title: "Umbrella",price: 120},            {title: "Shorts",price: 130},            {title: "Pants",price: 200},        ];        this.filteredGoods = [            {title: "Shirt",price: 150},            {title: "Socks",price: 50},            {title: "Jacket",price: 350},            {title: "Shoes",price: 250},            {title: "Pyjamas",price: 100},            {title: "Hat",price: 100},            {title: "Umbrella",price: 120},            {title: "Shorts",price: 130},            {title: "Pants",price: 200},        ];    };    render() {        let listHtml = "";        const goodsList = document.querySelector(".goods-list");        goodsList.innerHTML = '';        this.filteredGoods.forEach((good) => {            let goodItem = new GoodsItem(good.title, good.price);            // goodItem.addToCart();            listHtml += goodItem.render();        });        goodsList.insertAdjacentHTML("afterbegin", listHtml);        this._showSum();    };    searchGoods(value){        const regexp = new RegExp(value, 'i');        this.filteredGoods = this.goods.filter(good => good.title.match(regexp));        this.render();    };}class Cart {    constructor() {        this.count = 0;        this.items = [];    };    _addCount() {        let itemsCount = document.querySelector(".items_count");        return (itemsCount.innerHTML = this.count);    };    _addToCartBtnListener(btn) {        btn.addEventListener("click", () => {            this.count++;            this._addCount();        });    };    renderCartQuantity() {        document            .querySelectorAll(".add_to_cart")            .forEach(this._addToCartBtnListener.bind(this));        this._addCount();    };    //new methods    _renderCartSum() {        //{item price * quantity}        //show sum    };    proceedToPayment() {        //link to the page with sum & checkout    };    cleanCart() {        //remove all goods, clean sum    };}//элемент корзины (товар в корзине)class ItemInCart {    constructor(title, price, quantity) {        this.title = title;        this.price = price;        this.quantity = quantity;    };    changeQuantity() {        //btns + & –    };    removeFromCart() {        //btn 'delete item'    };    showItem() {        //link to this product    };}//Создание объектов товаров и корзины, вызов методовwindow.onload = () => {    let list = new GoodsList();    list.fetchGoods();    list.render();    let cart = new Cart();    cart.renderCartQuantity();    list.fetchGoods();    let searchButton = document.querySelector('.search-button');    let searchInput = document.querySelector('.goods-search');    searchButton.addEventListener('click', () => {        const value = searchInput.value;        list.searchGoods(value);    });};const fetch = (method, url) => {    let xhr;    if (window.XMLHttpRequest) {    // Chrome, Mozilla, Opera, Safari      xhr = new XMLHttpRequest();    } else if (window.ActiveXObject) {     // Internet Explorer      xhr = new ActiveXObject("Microsoft.XMLHTTP");    }    xhr.onreadystatechange = () => {        if (xhr.readyState === 4 && xhr.status === 200) {            const images = JSON.parse(xhr.responseText);            console.log(images);        }    }    xhr.open('GET', url, true);    xhr.send();}const URL = 'https://jsonplaceholder.typicode.com/photos';fetch('GET',URL);